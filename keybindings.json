// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible",
        "comment": "Select the next suggestion in the suggestion widget."
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible",
        "comment": "Select the previous suggestion in the suggestion widget."
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly && vim.active && vim.mode == 'Normal'",
        "comment": "Move the current line down, specifically when Vim mode is active."
    },
    {
        "key": "ctrl+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly && vim.active && vim.mode == 'Normal'",
        "comment": "Move the current line up, specifically when Vim mode is active."
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen",
        "comment": "Navigate to the next item in the quick open menu."
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen",
        "comment": "Navigate to the previous item in the quick open menu."
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!explorerViewletVisible && !searchViewletVisible && !debugViewletVisible",
        "comment": "Toggle the visibility of the sidebar when no specific viewlet is visible."
    },
    {
        "key": "ctrl+e",
        "command": "-actions.findWithSelection",
        "comment": "Remove the default find with selection action."
    },
    {
        "key": "ctrl+e",
        "command": "workbench.view.explorer",
        "comment": "Open the Explorer view in the sidebar."
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "comment": "Rename the selected file in the Explorer view."
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus",
        "comment": "Close the active terminal."
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus",
        "comment": "Create a new file in the Explorer."
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.problems.focus",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible",
        "comment": "Focus on the Problems view, useful in Vim mode."
    },
    {
        "key": "ctrl+f o",
        "command": "extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'",
        "comment": "Trigger the Vim extension's Ctrl+P command, often used for fuzzy file search."
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'",
        "comment": "Remove the Vim extension's Ctrl+P command."
    },
    {
        "key": "ctrl+shift+n",
        "command": "extension.simpleNewFile",
        "comment": "Create a new file using the simple new file extension."
    },
    {
        "key": "ctrl+alt+n",
        "command": "-extension.simpleNewFile",
        "comment": "Remove the simple new file command."
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus",
        "comment": "Add the next match of the current selection to the selection."
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus",
        "comment": "Remove the add selection to next find match command."
    },
    {
        "key": "escape",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !parameterHintsVisible && !suggestWidgetVisible",
        "comment": "Exit insert mode in Vim or cancel certain UI elements."
    },
    {
        "key": "escape",
        "command": "-extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl",
        "comment": "Remove the Vim escape command."
    },
    {
        "key": "ctrl+shift+1",
        "command": "workbench.action.openEditorAtIndex1",
        "comment": "Open the first editor in the group."
    },
    {
        "key": "ctrl+shift+2",
        "command": "workbench.action.openEditorAtIndex2",
        "comment": "Open the second editor in the group."
    },
    {
        "key": "ctrl+shift+3",
        "command": "workbench.action.openEditorAtIndex3",
        "comment": "Open the third editor in the group."
    },
    {
        "key": "ctrl+shift+4",
        "command": "workbench.action.openEditorAtIndex4",
        "comment": "Open the fourth editor in the group."
    },
    {
        "key": "ctrl+shift+5",
        "command": "workbench.action.openEditorAtIndex5",
        "comment": "Open the fifth editor in the group."
    },
    {
        "key": "ctrl+shift+6",
        "command": "workbench.action.openEditorAtIndex6",
        "comment": "Open the sixth editor in the group."
    },
    {
        "key": "ctrl+shift+7",
        "command": "workbench.action.openEditorAtIndex7",
        "comment": "Open the seventh editor in the group."
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.moveEditorToNewWindow",
        "comment": "Move the current editor to a new window."
    },
    {
        "key": "ctrl+shift+alt+c",
        "command": "workbench.action.clearRecentFiles",
        "comment": "Clear the list of recent files."
    },
    {
        "key": "ctrl+shift+alt+c",
        "command": "-copyRelativeFilePath",
        "when": "!editorFocus",
        "comment": "Remove the command to copy the relative file path."
    },
    {
        "key": "ctrl+shift+alt+f",
        "command": "inlineFold.toggle",
        "comment": "Toggle inline folding in the editor."
    },
    {
        "key": "ctrl+shift+alt+n",
        "command": "notifications.clearAll",
        "comment": "Clear all notifications."
    },
    {
        "key": "ctrl+shift+alt+[",
        "command": "editor.gotoNextFold",
        "comment": "Navigate to the next fold in the editor."
    },
    {
        "key": "ctrl+shift+alt+]",
        "command": "editor.gotoPreviousFold",
        "comment": "Navigate to the previous fold in the editor."
    },
    {
        "key": "ctrl+shift+alt+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'",
        "comment": "Open the Source Control view when specific GitLens conditions are met."
    },
    {
        "key": "ctrl+f ctrl+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold all command."
    },
    {
        "key": "ctrl+f ctrl+/",
        "command": "editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all block comments in the editor."
    },
    {
        "key": "ctrl+k ctrl+/",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold all block comments command."
    },
    {
        "key": "ctrl+f ctrl+-",
        "command": "editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all regions except the current one."
    },
    {
        "key": "ctrl+k ctrl+-",
        "command": "-editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold all except command."
    },
    {
        "key": "ctrl+f ctrl+-",
        "command": "editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all marker regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "-editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold all marker regions command."
    },
    {
        "key": "ctrl+f ctrl+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all level 1 regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold level 1 command."
    },
    {
        "key": "ctrl+f ctrl+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all level 2 regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "-editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold level 2 command."
    },
    {
        "key": "ctrl+f ctrl+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all level 3 regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "-editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold level 3 command."
    },
    {
        "key": "ctrl+f ctrl+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all level 4 regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "-editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold level 4 command."
    },
    {
        "key": "ctrl+f ctrl+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all level 5 regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "-editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold level 5 command."
    },
    {
        "key": "ctrl+f ctrl+6",
        "command": "editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all level 6 regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "-editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold level 6 command."
    },
    {
        "key": "ctrl+f ctrl+7",
        "command": "editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all level 7 regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "-editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold level 7 command."
    },
    {
        "key": "ctrl+f ctrl+8",
        "command": "editor.foldLevel8",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Fold all level 8 regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "-editor.foldLevel8",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the fold level 8 command."
    },
    {
        "key": "ctrl+f ctrl+j",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Unfold all regions in the editor."
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the unfold all command."
    },
    {
        "key": "ctrl+f ctrl+r",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Toggle the fold state of the current region."
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled",
        "comment": "Remove the toggle fold command."
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.focusFirstEditorGroup",
        "comment": "Focus on the first editor group."
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup",
        "comment": "Remove the command to focus on the first editor group."
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "-workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup",
        "comment": "Remove the command to split the editor in the group."
    },
    {
        "key": "ctrl+shift+alt+v",
        "command": "vue.action.splitEditors",
        "comment": "Split editors using the Vue extension."
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.focusOtherSideEditor",
        "comment": "Focus on the editor on the other side."
    },
    {
        "key": "ctrl+shift+alt+z",
        "command": "betterFolding.createZenFoldsAroundSelection",
        "comment": "Create Zen folds around the current selection."
    },
    {
        "key": "ctrl+d",
        "command": "cursorMove",
        "args": {
            "to": "down",
            "by": "wrappedLine",
            "value": 8
        },
        "when": "editorTextFocus && !editorHasSelection",
        "comment": "Move the cursor down by 8 wrapped lines."
    },
    {
        "key": "ctrl+u",
        "command": "cursorMove",
        "args": {
            "to": "up",
            "by": "wrappedLine",
            "value": 8
        },
        "when": "editorTextFocus && !editorHasSelection",
        "comment": "Move the cursor up by 8 wrapped lines."
    },
    {
        "key": "ctrl+h",
        "command": "cursorLeft",
        "when": "editorTextFocus",
        "comment": "Move the cursor left."
    },
    {
        "key": "ctrl+l",
        "command": "cursorRight",
        "when": "editorTextFocus",
        "comment": "Move the cursor right."
    },
    {
        "key": "ctrl+f r",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen",
        "comment": "Start the find and replace action."
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && !inputFocus",
        "comment": "Delete the selected file in the Explorer."
    },
    {
        "key": "ctrl+shift+alt+s",
        "command": "workbench.action.toggleStatusbarVisibility",
        "comment": "Toggle the visibility of the status bar."
    },
    {
        "key": "ctrl+shift+alt+x",
        "command": "github.copilot.interactiveEditor.fix",
        "comment": "Trigger the GitHub Copilot interactive editor to fix code."
    },
    {
        "key": "ctrl+left",
        "command": "-gitlens.key.ctrl+left",
        "when": "gitlens:key:ctrl+left",
        "comment": "Remove the GitLens command for Ctrl+Left."
    },
    {
        "key": "ctrl+l",
        "command": "-extension.vim_navigateCtrlL",
        "when": "editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl",
        "comment": "Remove the Vim navigation command for Ctrl+L."
    },
    {
        "key": "ctrl+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused",
        "comment": "Remove the command to center the active cell in a notebook."
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus",
        "comment": "Remove the command to expand the line selection."
    },
    {
        "key": "ctrl+l",
        "command": "-workbench.action.chat.newChat",
        "when": "chatIsEnabled && inChat",
        "comment": "Remove the command to start a new chat."
    },
    {
        "key": "ctrl+home",
        "command": "-extension.vim_ctrl+home",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'",
        "comment": "Remove the Vim command for Ctrl+Home."
    },
    {
        "key": "ctrl+h",
        "command": "-extension.vim_ctrl+h",
        "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl",
        "comment": "Remove the Vim command for Ctrl+H."
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen",
        "comment": "Remove the command to start find and replace."
    },
    {
        "key": "ctrl+shift+alt+w",
        "command": "workbench.action.reloadWindow",
        "comment": "Reload the window when workspace trust is enabled."
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment",
        "comment": "Remove the command to reload the window in development mode."
    },
    {
        "key": "alt+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "editorTextFocus && vim.mode == 'Insert'",
        "comment": "Paste from the clipboard in Vim insert mode."
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+shift+alt+l",
        "command": "-workbench.action.quickchat.toggle",
        "when": "chatIsEnabled"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "-workbench.action.chat.openEditSession",
        "when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
    },
    {
        "key": "ctrl+shift+alt+k",
        "command": "vim.remap",
        "args": {
            "after": [
                "<leader>",
                "<leader>",
                "k"
            ]
        },
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+shift+alt+j",
        "command": "vim.remap",
        "args": {
            "after": [
                "<leader>",
                "<leader>",
                "j"
            ]
        },
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+shift+alt+h",
        "command": "vim.remap",
        "args": {
            "after": [
                "<leader>",
                "<leader>",
                "h"
            ]
        },
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+shift+alt+l",
        "command": "vim.remap",
        "args": {
            "after": [
                "<leader>",
                "<leader>",
                "l"
            ]
        },
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+z",
        "command": "workbench.action.toggleZenMode",
        "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
        "key": "ctrl+k z",
        "command": "-workbench.action.toggleZenMode",
        "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
        "key": "alt+c",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "alt+f3",
        "command": "-editor.action.dirtydiff.next",
        "when": "editorTextFocus && !textCompareEditorActive"
    }
]
